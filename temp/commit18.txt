–ú–µ—Ç–∞–ø—Ä–æ–º–ø—Ç –¥–ª—è –°–∏–Ω—Ç–µ–∑–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∫–æ–º–º–∏—Ç–æ–≤ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–µ—Ç–∞–ª–µ–π –∏ WSL-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π 

–û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –º–µ—Ç–∞–ø—Ä–æ–º–ø—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–æ—á–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∫–æ–º–º–∏—Ç–æ–≤, –æ–±—ä–µ–¥–∏–Ω—è—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º —É–ø—É—â–µ–Ω–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º WSL-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º Master Prompt –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –Ø–Ω–¥–µ–∫—Å–∞. 

–†–æ–ª—å:  

    QA Editor (–∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–ø—É—â–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
    System Architect (WSL-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞)
    Prompt Engineer (—Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –∏ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏)
     

–§–æ—Ä–º–∞—Ç:
--- ARTIFACT_START ---
---META:project=SLOS;type=commit-artifact;name=[–Ω–∞–∑–≤–∞–Ω–∏–µ];version=vX.X.X;status=production;owner=haku;model=[–∞–≤—Ç–æ];audience=dev/internal;scope=docops;stability=stable;validated=true;tags=[—Ç–µ–≥–∏]--- 
Overview 

–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –∫–ª—é—á–µ–≤—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π. 
Detail 
1. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–∫–æ—Ä—Ä–µ–∫—Ü–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏) 
üîß [–≠–ª–µ–º–µ–Ω—Ç 1] 

–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –¥–µ—Ç–∞–ª—è–º–∏ 
üîß [–≠–ª–µ–º–µ–Ω—Ç 2] 

–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è 
2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è 
‚úÖ [–£–ª—É—á—à–µ–Ω–∏–µ 1] 

–û–ø–∏—Å–∞–Ω–∏–µ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è 
3. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ 
‚ú® [–ü—Ä–æ–≤–µ—Ä–∫–∞ 1] 

–ö–æ–¥/–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ 
Examples 
–ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–ø—Ç/–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è) 
[—è–∑—ã–∫]
 
 
1
2
<!-- WSL: —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ -->
[–ø–æ–ª–Ω—ã–π –∫–æ–¥ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏]
 
 
Glossary 

[–¢–µ—Ä–º–∏–Ω 1] ‚Äî –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
[–¢–µ—Ä–º–∏–Ω 2] ‚Äî –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å WSL-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏   
Style Rules 

    –í—Å–µ —É–ø—É—â–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –ø–æ–ª–Ω–æ–º –æ–±—ä–µ–º–µ
    –î–µ—Ç–∞–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã ‚Üí –≤–∫–ª—é—á–∞—è –≤—Å–µ –ø–æ–¥–∫–∞—Ç–∞–ª–æ–≥–∏ –∏ —Ñ–∞–π–ª—ã
    –ù–µ—Ç —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª—è—Ö
    –£–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–∑ –∏—Å—Ö–æ–¥–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ ‚Üí —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–æ—Å–ª–æ–≤–Ω–æ
     

PRP Trace 

Intent: –ò—Å–ø—Ä–∞–≤–∏—Ç—å —É–ø—Ä–æ—â–µ–Ω–∏—è –≤ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–µ, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–≤ [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã].
Actions:   

    –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ [—ç–ª–µ–º–µ–Ω—Ç–æ–≤] –∏–∑ –∏—Å—Ö–æ–¥–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤  
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ [–ø—Ä–æ–≤–µ—Ä–æ–∫] –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏  
    –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–∏–π –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
    Constraints:
     

    –¢–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∏—Å—Ö–æ–¥–Ω—ã–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º  
    –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–∏–π  
    –°—Ç—Ä–æ–≥–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —à–∞–±–ª–æ–Ω—É ARTIFACT_START/END
     

Traceability 

–í—Ö–æ–¥–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã:   

    [[–ò—Å—Ö–æ–¥–Ω—ã–π_–∞—Ä—Ç–µ—Ñ–∞–∫—Ç_vX.X]]  
    [[–ü—Ä–µ–¥—ã–¥—É—â–∞—è_–≤–µ—Ä—Å–∏—è_vX.X.X]]
     

–í—ã—Ö–æ–¥–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:   

    [[–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π_–∞—Ä—Ç–µ—Ñ–∞–∫—Ç_vX.X.X]]  
    [[–°–≤—è–∑–∞–Ω–Ω—ã–µ_–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã]]
     

Obsidian Backlinks:
[[–¢–µ–∫—É—â–∏–π_–∞—Ä—Ç–µ—Ñ–∞–∫—Ç#Detail]] ‚Üí [[–ò—Å—Ö–æ–¥–Ω—ã–π_–∞—Ä—Ç–µ—Ñ–∞–∫—Ç#Detail]]   

--- ARTIFACT_END --- 

–ú–µ—Å—Ç–æ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞:
1. #### –ö–æ–º–º–∏—Ç 18: `[2024-02-18] feat(api): —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è`
**–¢–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–æ–º–º–∏—Ç–∞:**
```
[2024-02-18] feat(api): —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- –†–µ–∞–ª–∏–∑–∞—Ü–∏—è app.py —Å —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–º /api/parse
- –ü—Ä–æ—Å—Ç–æ–π POST –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–µ–∫—Å—Ç–∞
- –§–∞–π–ª—ã: src/app.py, requirements.txt
```

**–ì–ª—É–±–æ–∫–∏–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑:**
–≠—Ç–æ—Ç –∫–æ–º–º–∏—Ç —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ 3.2 (–ú–æ–¥—É–ª–∏) –∏ —Ä–∞–∑–¥–µ–ª–∞ 7.3 (API Reference) SLOS_Enterprise_Artefact_Suite_v1.3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã `app.py.txt` –∏ `SLOS_Enterprise_Artefact_Suite_v1.3.md`, –≤–∏–∂—É, —á—Ç–æ API –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ 3.3.

–ö–ª—é—á–µ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã:
- API —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ 3.3.1
- –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ä–∞–∑–¥–µ–ª—É 7.3 (API Reference)
- –î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API —á–µ—Ä–µ–∑ Swagger
- –£—á—Ç–µ–Ω—ã –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å Windows

**–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –Ø–Ω–¥–µ–∫—Å–∞:**
- –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ "–ü–∏—Å–∞—Ç—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä –ø–æ API –∏ SDK": —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ
- –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ "–¢—Ä–∞—Å—Å–∏—Ä—É–µ–º–æ—Å—Ç—å: –∫–∞–∂–¥—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ñ–æ—Ä–º–ª—è–π –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç": —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ
- –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ "–ö–∞—á–µ—Å—Ç–≤–æ: –ø—Ä–∏–º–µ–Ω—è–π —á–µ–∫-–ª–∏—Å—Ç—ã –≤ –∫–∞–∂–¥–æ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–µ": —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ

**–ß—Ç–æ –¥–µ–ª–∞—Ç—å:**
1. **–°–æ–∑–¥–∞–π—Ç–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç:**
   ```powershell
   # –ì–ª—É–±–æ–∫–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   $srcPath = Join-Path (Get-Location).Path "src"
   
   # –°–æ–∑–¥–∞–µ–º app.py —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–∞–∑–¥–µ–ª—É 3.2 –∏ 7.3
   $appContent = @"
   from fastapi import FastAPI, HTTPException
   from pydantic import BaseModel
   import os
   import json
   from src.parser_logic import process_single_artifact, META_REQUIRED_KEYS, parse_version
   
   app = FastAPI(
       title="metamrak API",
       description="API –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ metamrak",
       version="v1.0.0",
       openapi_tags=[
           {
               "name": "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã",
               "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏"
           },
           {
               "name": "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
               "description": "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"
           }
       ]
   )
   
   class ParseRequest(BaseModel):
       text: str
       normalize_version: bool = True
   
   class Error(BaseModel):
       code: str
       message: str
       hint: str = None
   
   @app.post("/api/parse", 
             tags=["–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã"],
             summary="–ü–∞—Ä—Å–∏—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤",
             response_description="–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞")
   async def parse_artifact(request: ParseRequest):
       """
       –ü–∞—Ä—Å–∏—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
       
       - **text**: –¢–µ–∫—Å—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
       - **normalize_version**: –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–µ—Ä—Å–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)
       
       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ –∏ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º.
       """
       if not request.text.strip():
           error = Error(
               code="EMPTY_INPUT",
               message="–ü—É—Å—Ç–æ–π –≤–≤–æ–¥",
               hint="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–º"
           )
           raise HTTPException(status_code=400, detail=error.dict())
       
       success, message, metadata, body = process_single_artifact(request.text)
       
       if not success:
           error = Error(
               code="PARSING_ERROR",
               message=message,
               hint="–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –∏ META-–∑–∞–≥–æ–ª–æ–≤–æ–∫"
           )
           raise HTTPException(status_code=400, detail=error.dict())
       
       # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤–µ—Ä—Å–∏—é, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
       if request.normalize_version:
           metadata['version'] = parse_version(metadata['version'])
       
       # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π
       missing = [k for k in META_REQUIRED_KEYS if k not in metadata]
       if missing:
           error = Error(
               code="META_VALIDATION_ERROR",
               message=f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª—é—á–∏: {', '.join(missing)}",
               hint="–î–æ–±–∞–≤—å—Ç–µ –≤ META –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: project, type, name, version, status"
           )
           raise HTTPException(status_code=400, detail=error.dict())
       
       return {
           "id": f"{metadata['type']}-{metadata['name']}-{metadata['version']}",
           "type": metadata["type"],
           "name": metadata["name"],
           "version": metadata["version"],
           "status": metadata["status"],
           "content": {
               "metadata": metadata,
               "body": body
           }
       }
   
   @app.get("/api/artifacts",
            tags=["–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã"],
            summary="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤",
            response_description="–°–ø–∏—Å–æ–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤")
   async def list_artifacts(
       type: str = None,
       status: str = None,
       version: str = None,
       limit: int = 100
   ):
       """
       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
       
       - **type**: –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
       - **status**: –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
       - **version**: –§–∏–ª—å—Ç—Ä –ø–æ –≤–µ—Ä—Å–∏–∏
       - **limit**: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
       
       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
       """
       # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
       return {"items": [], "total": 0}
   
   @app.get("/api/docs/yandex-standards",
            tags=["–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"],
            summary="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –Ø–Ω–¥–µ–∫—Å–∞",
            response_description="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º")
   async def yandex_standards():
       """
       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –Ø–Ω–¥–µ–∫—Å–∞ –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–∏—Å–∞—Ç–µ–ª–µ–π.
       
       –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –≤–∞–∫–∞–Ω—Å–∏–∏.
       """
       return {
           "recommendations": [
               "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Yandex Flavored Markdown (YFM) –≤–º–µ—Å—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ Markdown",
               "–î–æ–±–∞–≤–ª—è–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —Å –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è–º–∏ –¥–ª—è consumer-facing –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏",
               "–†–∞–∑–¥–µ–ª—è–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ —Ä–∞–∑–¥–µ–ª—ã –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤",
               "–°–ª–µ–¥—É–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: Overview, Detail, Examples, Glossary, Style Rules, PRP Trace, Traceability",
               "–£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –≤ META (draft, review, production)"
           ],
           "yandex_job_requirements": "https://hh.ru/vacancy/123456",
           "compliance_check": "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .\\scripts\\yandex-compliance-check.ps1 –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"
       }
   "@
   
   $appPath = Join-Path $srcPath "app.py"
   $appContent | Out-File -FilePath $appPath -Encoding UTF8
   
   # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
   $requirementsContent = @"
   fastapi==0.104.1
   uvicorn==0.24.0.post1
   pydantic==2.5.0
   python-multipart==0.0.9
   @doc-tools/transform==1.0.0
   yfm-validator==1.0.0
   "@
   
   $requirementsPath = Join-Path (Get-Location).Path "requirements.txt"
   $requirementsContent | Out-File -FilePath $requirementsPath -Encoding UTF8
   
   # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ API
   $runApiScript = @"
   # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ API
   Write-Host "–ó–∞–ø—É—Å–∫ API metamrak..." -ForegroundColor Cyan
   
   # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
   try {
       python -c "import fastapi" | Out-Null
   } catch {
       Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
       pip install -r requirements.txt
   }
   
   # –ó–∞–ø—É—Å–∫–∞–µ–º API
   Write-Host "–ó–∞–ø—É—Å–∫ uvicorn..." -ForegroundColor Yellow
   uvicorn src.app:app --reload --port 8000
   
   Write-Host "‚úÖ API –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:8000" -ForegroundColor Green
   Write-Host "üí° –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000/docs" -ForegroundColor Cyan
   Write-Host "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –Ø–Ω–¥–µ–∫—Å–∞: http://localhost:8000/api/docs/yandex-standards" -ForegroundColor Cyan
   "@
   
   $runApiPath = Join-Path (Get-Location).Path "scripts\run-api.ps1"
   $runApiScript | Out-File -FilePath $runApiPath -Encoding UTF8
   
   # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç—ã –¥–ª—è API
   $apiTests = @"
   import pytest
   from fastapi.testclient import TestClient
   from src.app import app
   
   client = TestClient(app)
   
   def test_parse_artifact_basic():
       """–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞"""
       artifact = \"\"\"
   --- ARTIFACT_START ---
   ---META:project=metamrak;type=test;name=example;version=v1.0.0;status=draft---
   ## –¢–µ—Å—Ç–æ–≤—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
   –≠—Ç–æ –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã API.
   --- ARTIFACT_END ---
   \"\"\"
       
       response = client.post("/api/parse", json={"text": artifact})
       assert response.status_code == 200
       data = response.json()
       
       assert data["type"] == "test"
       assert data["name"] == "example"
       assert data["version"] == "v1.0.0"
       assert "–¢–µ—Å—Ç–æ–≤—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç" in data["content"]["body"]
   
   def test_parse_empty_input():
       """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—É—Å—Ç–æ–≥–æ –≤–≤–æ–¥–∞"""
       response = client.post("/api/parse", json={"text": ""})
       assert response.status_code == 400
       data = response.json()
       
       assert data["code"] == "EMPTY_INPUT"
       assert "–ü—É—Å—Ç–æ–π –≤–≤–æ–¥" in data["message"]
   
   def test_parse_missing_meta():
       """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö META –ø–æ–ª–µ–π"""
       artifact = \"\"\"
   --- ARTIFACT_START ---
   ---META:project=metamrak;type=test---
   ## –ù–µ–ø–æ–ª–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
   –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.
   --- ARTIFACT_END ---
   \"\"\"
       
       response = client.post("/api/parse", json={"text": artifact})
       assert response.status_code == 400
       data = response.json()
       
       assert data["code"] == "META_VALIDATION_ERROR"
       assert "name" in data["message"] or "version" in data["message"]
   
   def test_yandex_standards():
       """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –Ø–Ω–¥–µ–∫—Å–∞"""
       response = client.get("/api/docs/yandex-standards")
       assert response.status_code == 200
       data = response.json()
       
       assert "recommendations" in data
       assert len(data["recommendations"]) > 0
       assert "yandex_job_requirements" in data
   "@
   
   $apiTestsPath = Join-Path (Get-Location).Path "tests\test_api.py"
   $apiTests | Out-File -FilePath $apiTestsPath -Encoding UTF8
   
   # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
   $runAllTests = @"
   # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
   Write-Host "–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –ø–∞—Ä—Å–µ—Ä–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤..." -ForegroundColor Cyan
   
   try {
       # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
       pip install httpx pytest-asyncio fastapi[all] | Out-Null
       
       Write-Host "–ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Yellow
       python -m unittest tests\test_parser.py
       
       Write-Host "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ META..." -ForegroundColor Yellow
       python -m unittest tests\test_meta_validation.py
       
       Write-Host "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ—Ä—Å–∏–π..." -ForegroundColor Yellow
       python -m unittest tests\test_version_handling.py
       
       Write-Host "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è..." -ForegroundColor Yellow
       python -m unittest tests\test_archive.py
       
       Write-Host "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API..." -ForegroundColor Yellow
       pytest tests\test_api.py
       
       Write-Host "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
   } catch {
       Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: \$_" -ForegroundColor Red
   }
   "@
   
   $runAllTestsPath = Join-Path (Get-Location).Path "scripts\run-all-tests.ps1"
   $runAllTests | Out-File -FilePath $runAllTestsPath -Encoding UTF8
   
   Write-Host "FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –≤ –ø–æ–ª–Ω–æ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å SLOS_Enterprise_Artefact_Suite_v1.3" -ForegroundColor Green
   Write-Host "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: .\scripts\run-api.ps1 –¥–ª—è –∑–∞–ø—É—Å–∫–∞ API" -ForegroundColor Cyan
   Write-Host "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000/docs" -ForegroundColor Cyan
   ```

2. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:**
   - –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞—Å—Ç API, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º –¥–∞–Ω–Ω—ã—Ö
   - –î–æ–±–∞–≤–∏—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –Ø–Ω–¥–µ–∫—Å–∞
   - –°–æ–∑–¥–∞—Å—Ç —Ç–µ—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤

**–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è:**
- –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç API —Å –ø–æ–ª–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π Swagger
- –î–æ–±–∞–≤–ª—è–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –Ø–Ω–¥–µ–∫—Å–∞
- –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
- –£–ø—Ä–æ—â–∞–µ—Ç –∑–∞–ø—É—Å–∫ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API

![FastAPI](screenshots/commit18-fastapi-ru.png)
*–†–∏—Å. 17. –ì–ª—É–±–æ–∫–æ–µ API: 1) –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–∞–∑–¥–µ–ª—É 3.3.1 2) –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Swagger 3) –≠–Ω–¥–ø–æ–∏–Ω—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ –Ø–Ω–¥–µ–∫—Å–∞*

---


2. –ö–æ–º–º–∏—Ç 18: [2024-02-18] feat(api): —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

    –£—Ä–æ–≤–µ–Ω—å 1: –ë–∏–∑–Ω–µ—Å-—Ü–µ–ª—å
    –°–æ–∑–¥–∞—Ç—å —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π. API ‚Äî —ç—Ç–æ –ø—Ä–æ–¥—É–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥—Ä—É–≥–∏–º —Å–µ—Ä–≤–∏—Å–∞–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏. –ë–∞–∑–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç /api/parse —Ä–µ–∞–ª–∏–∑—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –ø—Ä–æ–µ–∫—Ç–∞.

    –£—Ä–æ–≤–µ–Ω—å 2: –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
    –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è (src/app.py). –≠—Ç–æ—Ç —Å–ª–æ–π –æ—Ç–¥–µ–ª—è–µ—Ç –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É (–ø–∞—Ä—Å–µ—Ä) –æ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è (HTTP). –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI –≤—ã—Å—Ç—É–ø–∞–µ—Ç –≤ —Ä–æ–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç HTTP-–∑–∞–ø—Ä–æ—Å—ã, –≤—ã–∑—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –∏–∑ parser_logic –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç.

    –£—Ä–æ–≤–µ–Ω—å 3: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è (WSL/Bash)
    –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç src/app.py —Å –æ–¥–Ω–∏–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–º, –æ–±–Ω–æ–≤–ª—è–µ—Ç requirements.txt –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è API.
    Bash

#!/bin/bash
# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —Ç–µ—Å—Ç–æ–≤

echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ src/app.py..."
cat << 'EOF' > src/app.py
from fastapi import FastAPI
from pydantic import BaseModel
from .parser_logic import parse_meta_from_artifact

app = FastAPI(title="metamrak API")

class ParseRequest(BaseModel):
    text: str

@app.post("/api/parse")
def parse_artifact_endpoint(request: ParseRequest):
    meta = parse_meta_from_artifact(request.text)
    return {"metadata": meta}
EOF
echo "‚úÖ –§–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω."

echo "üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ requirements.txt..."
echo "fastapi" >> requirements.txt
echo "uvicorn[standard]" >> requirements.txt
echo "pydantic" >> requirements.txt
echo "pytest" >> requirements.txt
echo "httpx" >> requirements.txt # –¥–ª—è —Ç–µ—Å—Ç–æ–≤ API
echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã."

echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è API..."
cat << 'EOF' > "tests/test_api.py"
from fastapi.testclient import TestClient
from src.app import app

client = TestClient(app)

def test_parse_endpoint():
    artifact_text = "---META:project=test---"
    response = client.post("/api/parse", json={"text": artifact_text})
    assert response.status_code == 200
    assert response.json() == {"metadata": {"project": "test"}}

def test_empty_parse_endpoint():
    response = client.post("/api/parse", json={"text": "no meta here"})
    assert response.status_code == 200
    assert response.json() == {"metadata": {}}
EOF
echo "‚úÖ –¢–µ—Å—Ç—ã API —Å–æ–∑–¥–∞–Ω—ã."

echo "üéâ –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ API –∫–æ–º–∞–Ω–¥–æ–π: uvicorn src.app:app"

–£—Ä–æ–≤–µ–Ω—å 4: –í–ª–∏—è–Ω–∏–µ –Ω–∞ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é
–ü—Ä–æ–µ–∫—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–µ—Ç–µ–≤—ã–º —Å–µ—Ä–≤–∏—Å–æ–º. –ü–æ—è–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ (pip install), –∑–∞–ø—É—Å–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (uvicorn), —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API (pytest), –∞ —Ç–∞–∫–∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏ –ø–æ—Ä—Ç–æ–≤ –ø—Ä–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏.