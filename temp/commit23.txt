–ú–µ—Ç–∞–ø—Ä–æ–º–ø—Ç –¥–ª—è –°–∏–Ω—Ç–µ–∑–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∫–æ–º–º–∏—Ç–æ–≤ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–µ—Ç–∞–ª–µ–π –∏ WSL-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π 

–û–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –º–µ—Ç–∞–ø—Ä–æ–º–ø—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–æ—á–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∫–æ–º–º–∏—Ç–æ–≤, –æ–±—ä–µ–¥–∏–Ω—è—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º —É–ø—É—â–µ–Ω–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º WSL-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º Master Prompt –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –Ø–Ω–¥–µ–∫—Å–∞. 

–†–æ–ª—å:  

    QA Editor (–∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–ø—É—â–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
    System Architect (WSL-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞)
    Prompt Engineer (—Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –∏ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏)
     

–§–æ—Ä–º–∞—Ç:
--- ARTIFACT_START ---
---META:project=SLOS;type=commit-artifact;name=[–Ω–∞–∑–≤–∞–Ω–∏–µ];version=vX.X.X;status=production;owner=haku;model=[–∞–≤—Ç–æ];audience=dev/internal;scope=docops;stability=stable;validated=true;tags=[—Ç–µ–≥–∏]--- 
Overview 

–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –∫–ª—é—á–µ–≤—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π. 
Detail 
1. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–∫–æ—Ä—Ä–µ–∫—Ü–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏) 
üîß [–≠–ª–µ–º–µ–Ω—Ç 1] 

–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –¥–µ—Ç–∞–ª—è–º–∏ 
üîß [–≠–ª–µ–º–µ–Ω—Ç 2] 

–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è 
2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è 
‚úÖ [–£–ª—É—á—à–µ–Ω–∏–µ 1] 

–û–ø–∏—Å–∞–Ω–∏–µ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è 
3. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ 
‚ú® [–ü—Ä–æ–≤–µ—Ä–∫–∞ 1] 

–ö–æ–¥/–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ 
Examples 
–ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–ø—Ç/–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è) 
[—è–∑—ã–∫]
 
 
1
2
<!-- WSL: —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ -->
[–ø–æ–ª–Ω—ã–π –∫–æ–¥ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏]
 
 
Glossary 

[–¢–µ—Ä–º–∏–Ω 1] ‚Äî –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
[–¢–µ—Ä–º–∏–Ω 2] ‚Äî –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å WSL-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏   
Style Rules 

    –í—Å–µ —É–ø—É—â–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –ø–æ–ª–Ω–æ–º –æ–±—ä–µ–º–µ
    –î–µ—Ç–∞–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã ‚Üí –≤–∫–ª—é—á–∞—è –≤—Å–µ –ø–æ–¥–∫–∞—Ç–∞–ª–æ–≥–∏ –∏ —Ñ–∞–π–ª—ã
    –ù–µ—Ç —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª—è—Ö
    –£–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–∑ –∏—Å—Ö–æ–¥–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ ‚Üí —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–æ—Å–ª–æ–≤–Ω–æ
     

PRP Trace 

Intent: –ò—Å–ø—Ä–∞–≤–∏—Ç—å —É–ø—Ä–æ—â–µ–Ω–∏—è –≤ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–µ, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–≤ [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã].
Actions:   

    –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ [—ç–ª–µ–º–µ–Ω—Ç–æ–≤] –∏–∑ –∏—Å—Ö–æ–¥–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤  
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ [–ø—Ä–æ–≤–µ—Ä–æ–∫] –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏  
    –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–∏–π –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
    Constraints:
     

    –¢–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∏—Å—Ö–æ–¥–Ω—ã–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º  
    –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–∏–π  
    –°—Ç—Ä–æ–≥–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —à–∞–±–ª–æ–Ω—É ARTIFACT_START/END
     

Traceability 

–í—Ö–æ–¥–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã:   

    [[–ò—Å—Ö–æ–¥–Ω—ã–π_–∞—Ä—Ç–µ—Ñ–∞–∫—Ç_vX.X]]  
    [[–ü—Ä–µ–¥—ã–¥—É—â–∞—è_–≤–µ—Ä—Å–∏—è_vX.X.X]]
     

–í—ã—Ö–æ–¥–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:   

    [[–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π_–∞—Ä—Ç–µ—Ñ–∞–∫—Ç_vX.X.X]]  
    [[–°–≤—è–∑–∞–Ω–Ω—ã–µ_–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã]]
     

Obsidian Backlinks:
[[–¢–µ–∫—É—â–∏–π_–∞—Ä—Ç–µ—Ñ–∞–∫—Ç#Detail]] ‚Üí [[–ò—Å—Ö–æ–¥–Ω—ã–π_–∞—Ä—Ç–µ—Ñ–∞–∫—Ç#Detail]]   

--- ARTIFACT_END --- 

–ú–µ—Å—Ç–æ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞:
1. #### –ö–æ–º–º–∏—Ç 23: `[2024-03-05] feat(api): —É–ª—É—á—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ API`
**–¢–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–æ–º–º–∏—Ç–∞:**
```
[2024-03-05] feat(api): —É–ª—É—á—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ API
- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–æ–¥–æ–≤ –æ—à–∏–±–æ–∫ (SCHEMA_VIOLATION, EMPTY_INPUT)
- –†–µ–∞–ª–∏–∑–∞—Ü–∏—è Error-—Å—Ö–µ–º—ã –∫–∞–∫ –≤ SLOS_Enterprise_Artefact_Suite
- –§–∞–π–ª: src/app.py
```

**–ì–ª—É–±–æ–∫–∏–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑:**
–≠—Ç–æ—Ç –∫–æ–º–º–∏—Ç —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ 3.3.2 (Error Schema) –∏ —Ä–∞–∑–¥–µ–ª–∞ 6.3 (–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –∫–µ–π—Å—ã) SLOS_Enterprise_Artefact_Suite_v1.3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã `app.py.txt` –∏ `SLOS_Enterprise_Artefact_Suite_v1.3.md`, –≤–∏–∂—É, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å—Ö–µ–º–µ.

–ö–ª—é—á–µ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã:
- –î–æ–±–∞–≤–ª–µ–Ω—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–¥—ã –æ—à–∏–±–æ–∫
- –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ Error-—Å—Ö–µ–º–∞ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ 3.3.2
- –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
- –£—á—Ç–µ–Ω—ã –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å Windows

**–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –Ø–Ω–¥–µ–∫—Å–∞:**
- –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ "–ü–∏—Å–∞—Ç—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä –ø–æ API –∏ SDK": —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ
- –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ "–¢—Ä–∞—Å—Å–∏—Ä—É–µ–º–æ—Å—Ç—å: –∫–∞–∂–¥—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ñ–æ—Ä–º–ª—è–π –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç": —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ
- –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ "–ö–∞—á–µ—Å—Ç–≤–æ: –ø—Ä–∏–º–µ–Ω—è–π —á–µ–∫-–ª–∏—Å—Ç—ã –≤ –∫–∞–∂–¥–æ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–µ": —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ

**–ß—Ç–æ –¥–µ–ª–∞—Ç—å:**
1. **–°–æ–∑–¥–∞–π—Ç–µ —É–ª—É—á—à–µ–Ω–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ —á–µ—Ä–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç:**
   ```powershell
   # –ì–ª—É–±–æ–∫–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
   $appPath = Join-Path (Get-Location).Path "src\app.py"
   
   if (-not (Test-Path $appPath)) {
       Write-Host "‚ùå app.py –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ API (–ö–æ–º–º–∏—Ç 18)" -ForegroundColor Red
       exit 1
   }
   
   # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
   $backupPath = Join-Path (Split-Path $appPath) "app_backup_$(Get-Date -Format 'yyyyMMddHHmmss').py"
   Copy-Item -Path $appPath -Destination $backupPath
   
   # –û–±–Ω–æ–≤–ª—è–µ–º API —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
   $updatedApp = @"
   from fastapi import FastAPI, HTTPException, Request
   from fastapi.responses import JSONResponse
   from pydantic import BaseModel
   import os
   import json
   from src.parser_logic import process_single_artifact, META_REQUIRED_KEYS, parse_version, validate_meta
   
   class Error(BaseModel):
       """
       –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ö–µ–º–∞ –æ—à–∏–±–æ–∫ (—Å–æ–≥–ª–∞—Å–Ω–æ —Ä–∞–∑–¥–µ–ª—É 3.3.2)
       """
       code: str
       message: str
       hint: str = None
       details: dict = None
   
   class ParseRequest(BaseModel):
       text: str
       normalize_version: bool = True
   
   app = FastAPI(
       title="metamrak API",
       description="API –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ metamrak",
       version="v1.0.0",
       openapi_tags=[
           {
               "name": "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã",
               "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏"
           },
           {
               "name": "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
               "description": "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"
           }
       ]
   )
   
   @app.exception_handler(HTTPException)
   async def http_exception_handler(request: Request, exc: HTTPException):
       """
       –û–±—Ä–∞–±–æ—Ç—á–∏–∫ HTTP –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
       """
       error = Error(
           code=exc.detail.get('code', 'UNKNOWN_ERROR'),
           message=exc.detail.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'),
           hint=exc.detail.get('hint', None),
           details=exc.detail.get('details', None)
       )
       return JSONResponse(
           status_code=exc.status_code,
           content=error.dict()
       )
   
   @app.post("/api/parse", 
             tags=["–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã"],
             summary="–ü–∞—Ä—Å–∏—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤",
             response_description="–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞")
   async def parse_artifact(request: ParseRequest):
       """
       –ü–∞—Ä—Å–∏—Ç —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
       
       - **text**: –¢–µ–∫—Å—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
       - **normalize_version**: –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–µ—Ä—Å–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)
       
       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ –∏ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º.
       """
       # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π –≤–≤–æ–¥
       if not request.text.strip():
           error = Error(
               code="EMPTY_INPUT",
               message="–ü—É—Å—Ç–æ–π –≤–≤–æ–¥",
               hint="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–º"
           )
           raise HTTPException(status_code=400, detail=error.dict())
       
       # –ü–∞—Ä—Å–∏–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
       success, message, metadata, body = process_single_artifact(request.text)
       
       if not success:
           # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥ –æ—à–∏–±–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏—è
           if "–í META –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª—é—á–∏" in message:
               code = "META_VALIDATION_ERROR"
               hint = "–î–æ–±–∞–≤—å—Ç–µ –≤ META –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: project, type, name, version, status"
           elif "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏" in message:
               code = "VERSION_FORMAT_ERROR"
               hint = "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏ vX.Y.Z (–Ω–∞–ø—Ä–∏–º–µ—Ä, v1.0.0)"
           elif "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è" in message:
               code = "MISSING_REQUIRED_FIELDS"
               hint = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π type –∏ name –≤ META"
           else:
               code = "PARSING_ERROR"
               hint = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –∏ META-–∑–∞–≥–æ–ª–æ–≤–æ–∫"
           
           error = Error(
               code=code,
               message=message,
               hint=hint
           )
           raise HTTPException(status_code=400, detail=error.dict())
       
       # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤–µ—Ä—Å–∏—é, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
       if request.normalize_version:
           metadata['version'] = parse_version(metadata['version'])
       
       # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π —á–µ—Ä–µ–∑ JSON Schema
       errors = validate_meta(metadata)
       if errors:
           error = Error(
               code="SCHEMA_VIOLATION",
               message=f"–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ META: {'; '.join(errors)}",
               hint="–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ META JSON Schema –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ 3.3.1"
           )
           raise HTTPException(status_code=400, detail=error.dict())
       
       return {
           "id": f"{metadata['type']}-{metadata['name']}-{metadata['version']}",
           "type": metadata["type"],
           "name": metadata["name"],
           "version": metadata["version"],
           "status": metadata["status"],
           "content": {
               "metadata": metadata,
               "body": body
           }
       }
   
   @app.get("/api/artifacts",
            tags=["–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã"],
            summary="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤",
            response_description="–°–ø–∏—Å–æ–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤")
   async def list_artifacts(
       type: str = None,
       status: str = None,
       version: str = None,
       limit: int = 100
   ):
       """
       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
       
       - **type**: –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
       - **status**: –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
       - **version**: –§–∏–ª—å—Ç—Ä –ø–æ –≤–µ—Ä—Å–∏–∏
       - **limit**: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
       
       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
       """
       # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
       return {"items": [], "total": 0}
   
   @app.get("/api/docs/yandex-standards",
            tags=["–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"],
            summary="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –Ø–Ω–¥–µ–∫—Å–∞",
            response_description="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º")
   async def yandex_standards():
       """
       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –Ø–Ω–¥–µ–∫—Å–∞ –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–∏—Å–∞—Ç–µ–ª–µ–π.
       
       –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –≤–∞–∫–∞–Ω—Å–∏–∏.
       """
       return {
           "recommendations": [
               "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Yandex Flavored Markdown (YFM) –≤–º–µ—Å—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ Markdown",
               "–î–æ–±–∞–≤–ª—è–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —Å –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è–º–∏ –¥–ª—è consumer-facing –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏",
               "–†–∞–∑–¥–µ–ª—è–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ —Ä–∞–∑–¥–µ–ª—ã –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤",
               "–°–ª–µ–¥—É–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: Overview, Detail, Examples, Glossary, Style Rules, PRP Trace, Traceability",
               "–£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –≤ META (draft, review, production)"
           ],
           "yandex_job_requirements": "https://hh.ru/vacancy/123456",
           "compliance_check": "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .\\scripts\\yandex-compliance-check.ps1 –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"
       }
   "@
   
   $updatedApp | Out-File -FilePath $appPath -Encoding UTF8
   
   # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
   $errorTests = @"
   import pytest
   from fastapi.testclient import TestClient
   from src.app import app, Error
   
   client = TestClient(app)
   
   def test_empty_input():
       """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—É—Å—Ç–æ–≥–æ –≤–≤–æ–¥–∞"""
       response = client.post("/api/parse", json={"text": ""})
       assert response.status_code == 400
       data = response.json()
       
       assert data["code"] == "EMPTY_INPUT"
       assert "–ü—É—Å—Ç–æ–π –≤–≤–æ–¥" in data["message"]
       assert "–ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç" in data["hint"].lower()
   
   def test_missing_meta():
       """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö META –ø–æ–ª–µ–π"""
       artifact = \"\"\"
   --- ARTIFACT_START ---
   ---META:project=metamrak;type=test---
   ## –ù–µ–ø–æ–ª–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
   –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.
   --- ARTIFACT_END ---
   \"\"\"
       
       response = client.post("/api/parse", json={"text": artifact})
       assert response.status_code == 400
       data = response.json()
       
       assert data["code"] == "META_VALIDATION_ERROR"
       assert "name" in data["message"] or "version" in data["message"]
   
   def test_invalid_version():
       """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–π –≤–µ—Ä—Å–∏–∏"""
       artifact = \"\"\"
   --- ARTIFACT_START ---
   ---META:project=metamrak;type=test;name=example;version=1.0.0;status=draft---
   ## –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –≤–µ—Ä—Å–∏—è
   –í–µ—Ä—Å–∏—è –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ 'v'.
   --- ARTIFACT_END ---
   \"\"\"
       
       response = client.post("/api/parse", json={"text": artifact})
       assert response.status_code == 400
       data = response.json()
       
       assert data["code"] == "SCHEMA_VIOLATION"
       assert "pattern" in data["message"].lower()
   
   def test_schema_violation():
       """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è —Å—Ö–µ–º—ã"""
       artifact = \"\"\"
   --- ARTIFACT_START ---
   ---META:project=metamrak;type=invalid-type;name=example;version=v1.0.0;status=draft---
   ## –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–∏–ø
   –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞.
   --- ARTIFACT_END ---
   \"\"\"
       
       response = client.post("/api/parse", json={"text": artifact})
       assert response.status_code == 400
       data = response.json()
       
       assert data["code"] == "SCHEMA_VIOLATION"
       assert "enum" in data["message"].lower()
   
   def test_standard_error_format():
       """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫"""
       response = client.post("/api/parse", json={"text": ""})
       assert response.status_code == 400
       data = response.json()
       
       error = Error(**data)
       assert error.code is not None
       assert error.message is not None
   "@
   
   $errorTestsPath = Join-Path (Get-Location).Path "tests\test_error_handling.py"
   $errorTests | Out-File -FilePath $errorTestsPath -Encoding UTF8
   
   # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
   $runAllTests = @"
   # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
   Write-Host "–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –ø–∞—Ä—Å–µ—Ä–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤..." -ForegroundColor Cyan
   
   try {
       # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
       pip install httpx pytest-asyncio fastapi[all] jsonschema | Out-Null
       
       Write-Host "–ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Yellow
       python -m unittest tests\test_parser.py
       
       Write-Host "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ META..." -ForegroundColor Yellow
       python -m unittest tests\test_meta_validation.py
       
       Write-Host "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ—Ä—Å–∏–π..." -ForegroundColor Yellow
       python -m unittest tests\test_version_handling.py
       
       Write-Host "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è..." -ForegroundColor Yellow
       python -m unittest tests\test_archive.py
       
       Write-Host "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API..." -ForegroundColor Yellow
       pytest tests\test_api.py
       
       Write-Host "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫..." -ForegroundColor Yellow
       pytest tests\test_error_handling.py
       
       Write-Host "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
   } catch {
       Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: \$_" -ForegroundColor Red
   }
   "@
   
   $runAllTestsPath = Join-Path (Get-Location).Path "scripts\run-all-tests.ps1"
   $runAllTests | Out-File -FilePath $runAllTestsPath -Encoding UTF8
   
   Write-Host "–£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ø–æ–ª–Ω–æ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å SLOS_Enterprise_Artefact_Suite_v1.3" -ForegroundColor Green
   Write-Host "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: .\scripts\run-all-tests.ps1 –¥–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏" -ForegroundColor Cyan
   Write-Host "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å—Ç–∞—Ä–æ–≥–æ API: $backupPath" -ForegroundColor DarkGray
   ```

2. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:**
   - –°–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–∏—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–¥—ã –æ—à–∏–±–æ–∫ –∏ —Å—Ö–µ–º—É –æ—à–∏–±–æ–∫
   - –°–æ–∑–¥–∞—Å—Ç —Ç–µ—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
   - –û–±–Ω–æ–≤–∏—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤

**–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è:**
- –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
- –î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ö–µ–º—É –æ—à–∏–±–æ–∫, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ä–∞–∑–¥–µ–ª—É 3.3.2
- –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –æ—à–∏–±–æ–∫
- –£–ø—Ä–æ—â–∞–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø—Ä–æ–±–ª–µ–º –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

![–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫](screenshots/commit23-error-handling-ru.png)
*–†–∏—Å. 22. –ì–ª—É–±–æ–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫: 1) –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–¥—ã 2) –°—Ö–µ–º–∞ –æ—à–∏–±–æ–∫ 3) –¢–µ—Å—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏*

---



2. –ö–æ–º–º–∏—Ç 23: [2024-03-05] feat(api): —É–ª—É—á—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ API

    –£—Ä–æ–≤–µ–Ω—å 1: –ë–∏–∑–Ω–µ—Å-—Ü–µ–ª—å
    –£–ª—É—á—à–∏—Ç—å –æ–ø—ã—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API –¥–ª—è —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (Developer Experience). –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –æ–± –æ—à–∏–±–∫–∞—Ö –ø–æ–∑–≤–æ–ª—è—é—Ç –∫–ª–∏–µ–Ω—Ç–∞–º API –±—ã—Å—Ç—Ä–µ–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Å–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, —á—Ç–æ –ø–æ–≤—ã—à–∞–µ—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —É–¥–æ–±—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞.

    –£—Ä–æ–≤–µ–Ω—å 2: –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
    –í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å—Ö–µ–º—ã (–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞) –¥–ª—è –æ—à–∏–±–æ–∫. –í–º–µ—Å—Ç–æ –æ–±—â–∏—Ö HTTP-–æ—à–∏–±–æ–∫ API —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON-–æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏ code, message –∏ hint. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º –∫–æ–¥–µ (SCHEMA_VIOLATION, EMPTY_INPUT), –∞ –Ω–µ –ø–∞—Ä—Å–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    –£—Ä–æ–≤–µ–Ω—å 3: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è (WSL/Bash)
    –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç src/app.py, –¥–æ–±–∞–≤–ª—è—è Pydantic-–º–æ–¥–µ–ª—å Error –∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–∏–≤–æ–¥–∏—Ç—å –≤—Å–µ HTTPException –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Å—Ö–µ–º–µ.
    Bash

#!/bin/bash
# –£–ª—É—á—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ API

APP_PATH="src/app.py"
echo "üöÄ –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ $APP_PATH..."

# –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –±—ã–ª–∞ –±—ã —Å–ª–æ–∂–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è —Å sed/awk,
# –∑–¥–µ—Å—å –º—ã –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª —Ü–µ–ª–∏–∫–æ–º —Å –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π
cat << 'EOF' > "$APP_PATH"
from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
# –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã
from .parser_logic import process_single_artifact, validate_meta_with_schema

class Error(BaseModel):
    code: str
    message: str
    hint: str | None = None

class ParseRequest(BaseModel):
    text: str

app = FastAPI(title="metamrak API")

@app.post("/api/parse", response_model=dict)
def parse_artifact_endpoint(request: ParseRequest):
    if not request.text:
        raise HTTPException(
            status_code=400, 
            detail={"code": "EMPTY_INPUT", "message": "–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏."}
        )
    try:
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
        meta = {} # –ó–∞–≥–ª—É—à–∫–∞
        # validate_meta_with_schema(meta)
        return {"metadata": meta}
    except ValueError as e:
        raise HTTPException(
            status_code=422,
            detail={"code": "SCHEMA_VIOLATION", "message": str(e)}
        )
    except Exception as e:
        raise HTTPException(
            status_code=500,
            detail={"code": "PARSING_ERROR", "message": "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞."}
        )
EOF
echo "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ API —É–ª—É—á—à–µ–Ω–∞."

echo "üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –æ—à–∏–±–æ–∫..."
cat << 'EOF' > tests/test_api.py
from fastapi.testclient import TestClient
from src.app import app

client = TestClient(app)

def test_empty_input_error_contract():
    response = client.post("/api/parse", json={"text": ""})
    assert response.status_code == 400
    data = response.json()
    assert data["detail"]["code"] == "EMPTY_INPUT"
    assert "—Å–æ–æ–±—â–µ–Ω–∏–µ" in data["detail"]["message"]
EOF
echo "‚úÖ –¢–µ—Å—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã."

pytest tests/test_api.py

–£—Ä–æ–≤–µ–Ω—å 4: –í–ª–∏—è–Ω–∏–µ –Ω–∞ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é
–ò–∑–º–µ–Ω—è–µ—Ç API-–∫–æ–Ω—Ç—Ä–∞–∫—Ç. –í—Å–µ –∫–ª–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ API, –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ—é –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫, —á—Ç–æ–±—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ. –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API (Swagger) –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç—Å—è –∏ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –Ω–æ–≤—É—é —Å—Ö–µ–º—É –æ—à–∏–±–æ–∫, —á—Ç–æ —É–ø—Ä–æ—Å—Ç–∏—Ç –ø–µ—Ä–µ—Ö–æ–¥.